// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "github.com/olteffe/avitochat/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// Message is an autogenerated mock type for the Message type
type Message struct {
	mock.Mock
}

// ExistenceAuthor provides a mock function with given fields: message
func (_m *Message) ExistenceAuthor(message *models.Messages) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Messages) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExistenceChat provides a mock function with given fields: message
func (_m *Message) ExistenceChat(message *models.Messages) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Messages) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetMessagesRepository provides a mock function with given fields: message
func (_m *Message) GetMessagesRepository(message *models.Messages) ([]*models.Messages, error) {
	ret := _m.Called(message)

	var r0 []*models.Messages
	if rf, ok := ret.Get(0).(func(*models.Messages) []*models.Messages); ok {
		r0 = rf(message)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Messages)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Messages) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendMessageRepository provides a mock function with given fields: message
func (_m *Message) SendMessageRepository(message *models.Messages) (string, error) {
	ret := _m.Called(message)

	var r0 string
	if rf, ok := ret.Get(0).(func(*models.Messages) string); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.Messages) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
