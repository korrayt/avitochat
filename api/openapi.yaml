openapi: "3.0.2"
info:
  title: "Chat server"
  description: "**Statement of work:** create simple chat API. *Purpose:* this is a test task for an intern at Avito.
  *Scope of work:* see [here](https://https://github.com/olteffe/avitochat/blob/master/task.md).
  *Location of work:* upload to github.com.
  *Period of performance:* depending on luck.
  *Applicable standards:* HTTP API.
  *Acceptance criteria:* UAT."
  version: "1.0"
  termsOfService: "https://example.com/terms"
  contact:
    name: "Chat server API"
    url: "https://example.com/"
    email: "some_email@e-mail.com"
  license:
    name: "GPLv3 (GNU General Public License Version 3)"
    url: "https://www.gnu.org/licenses/gpl-3.0.txt"
servers:
  - url: http://localhost:9000
paths:
  /users/add:
    post:
      tags:
        - users
      summary: "Create new user"
      description: |
        "Create a new user with ID given in request body."
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
      responses:
        "201":
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_201'
        "400":
          description: Bad request
        "409":
          description: Username already used
        "500":
          description: Internal server error
  /chats/add:
    post:
      tags:
        - chats
      summary: "Create a chat between users"
      description: |
        "Create a new chat. The chat name must be unique."
      operationId: createChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createChat'
      responses:
        "201":
          description: Chat successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createChat_201'
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /chats/get:
    post:
      tags:
        - chats
      summary: "Get all user chats"
      description: "Get all user chats. Response: a list of all chats with all fields, sorted by the time
      of last message in the chat (from late to early)."
      operationId: getChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getChat'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChat_200'
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal server error

  /messages/add:
    post:
      tags:
        - messages
      summary: "Send a user message"
      description: |
        "Send a user message to the chat room. Request body example: {"chat": "<CHAT_ID>", "author": "<USER_ID>", "text": "hi"}"
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendMessage'
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendMessage_201'
        "400":
          description: Bad request
        "404":
          description: User or chat not found
        "500":
          description: Internal server error
  /messages/get:
    post:
      tags:
        - messages
      summary: "Get all chat messages"
      description: |
        "Get a list of messages in given chat room. Request body example: {"chat": "<CHAT_ID>"}.
        Response: a list of all messages with all fields, sorted by the time(from late to early)"
      operationId: getMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getMessages'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMessages_200'
        "400":
          description: Bad request
        "404":
          description: Chat not found
        "500":
          description: Internal server error
components:
  schemas:
    createUser:
      type: object
      properties:
        username:
          type: string
    createUser_201:
      type: object
      properties:
        id:
          type: string
          format: uuid
    createChat:
      required:
        - name
        - users
      type: object
      properties:
        name:
          type: string
        users:
          uniqueItems: true
          minItems: 2
          type: array
          items:
            type: string
            format: uuid
    createChat_201:
      type: object
      properties:
        id:
          type: string
          format: uuid
    getChat:
      required:
        - user
      type: object
      properties:
        user:
          type: string
          format: uuid
    getChat_200:
      type: array
      items:
        $ref: '#/components/schemas/chat_form'
    sendMessage:
      required:
        - chat
        - author
        - text
      type: object
      properties:
        chat:
          type: string
          format: uuid
        author:
          type: string
          format: uuid
        text:
          type: string
          minLength: 1
    sendMessage_201:
      type: object
      properties:
        id:
          type: string
          format: uuid
    getMessages:
      properties:
        chat:
          type: string
          format: uuid
    getMessages_200:
      type: array
      items:
        $ref: '#/components/schemas/message_form'
    chat_form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        users:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
    message_form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        author:
          type: string
          format: uuid
        text:
          type: string
        created_at:
          type: string
          format: date-time
